input {
      
  	file {
          path => ["/var/log/f5ddos_all.log"]
          sincedb_path => "/var/log/logstash/sincedb"
          start_position => "end"
	}
 }


filter {
  

   	 grok {
        	match => {"message" =>  ["%{SYSLOGTIMESTAMP:syslog_timestamp}%{SPACE}%{SYSLOGHOST:eventSourceIP}%{SPACE}%{GREEDYDATA:xdata}"] }
    	}
    if "root:" not in [xdata] or "<someone>:" not in [xdata] {
	mutate { add_tag => [ "f5ddoskv" ]}
    	kv {
            source => "xdata"
            field_split => ","
            value_split => "="
    	}
	if "N/A" in [dest_ip] { mutate { update => {"dest_ip" => "0.0.0.0" } }}

	if "23003173" in [errdefs_msgno] {
		mutate { 
			add_field => {"dos_attack_name" => "%{sig_name}"}
			add_field => {"dos_src" => "%{bdos_family}"}
			add_field => {"action" => "%{errdefs_msg_name}"}	
		}
	}
	
        if "Allow" in [action] and "23003142" not in [errdefs_msgno] {
	    mutate { add_field => {"context_type" => "%{context_name}" } }
            mutate { add_field => {"SuspiciousPackets" => "%{dos_packets_received}"}}
            if "Device" not in [context_name] {
                mutate { update => {"context_type" => "Virtual Server" } }
            
            }
	}
        if "Drop" in [action] and "23003142" not in [errdefs_msgno] {
            mutate { add_field => {"context_type" => "%{context_name}" } }
            if "Device" not in [context_name] {
            mutate { update => {"context_type" => "Virtual Server" } }
                }
        }
        if "23003142" in [errdefs_msgno] {
	      mutate {add_field => {"dos_attack_name" => "IPI:%{ip_intelligence_policy_name}(%{ip_intelligence_threat_name})" }}
	      mutate {add_field => {"dos_src" => "%{errdefs_msg_name}" }}
    	      if "/Common/" in [dos_attack_name] { mutate { gsub => ["dos_attack_name","/Common/",""] } }
	      mutate {add_field => {"IPIallowpckts" => "0"}}	
 	      mutate {add_field => {"IPIdroppedpckts" => "0"}}
            if "Accept" in [action] {
                mutate {
                    update => {"IPIallowpckts" =>"1" }
                    update => {"IPIdroppedpckts" => "0" }
                    add_field => {"dos_packets_received" => "1" }
                    add_field => {"dos_packets_dropped" => "0" }
                    
                }
            }
            if "Drop" in [action] {
                mutate {
                    update => {"IPIallowpckts" =>"0" }
                    update => {"IPIdroppedpckts" => "1" }
                    add_field => {"dos_packets_received" => "1" }
                    add_field => {"dos_packets_dropped" => "1" }
                }
            }
	}

    	date {
        	match => [ "date_time", "MMM dd yyyy HH:mm:ss" ]
        	target => date_time

        }
	mutate {
	split => { "metric_bins" => "\s" }
	}
        if [source_ip] and [source_ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {

      		geoip {

             	source => "source_ip"
		target => "src_geoip"
               }
	    
	}
        if [dest_ip] and [dest_ip] !~ "(^127\.0\.0\.1)|(^10\.)|(^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)|(^192\.168\.)|(^169\.254\.)" {

                geoip {

                source => "dest_ip"
		target => "dest_geoip"

               }
}
   
   
   
    if "L4 BDOS Dynamic" in [action] { mutate { gsub => ["action","L4 BDOS Dynamic",""] } }
    if "dos-common" in [dos_attack_name] { mutate { gsub => ["dos_attack_name","/Common/dos-common/",""] } }
    if "BDOS Signature-Based" in [dos_src] {mutate { add_field => {"status" => "RE-USED" }}}
    
    }

   if "root:" in [xdata] or "<someone>:" in [xdata] {
	mutate { add_tag => [ "f5ddos_stats" ]}
	mutate { gsub => [ "xdata",":","," ] }
        csv {
                source => "xdata"
                separator => ","
                columns => [
			"user_process", 
			"context_name", 
			"dos_attack_name",
			"attack_detected", 	
			"stats_rate",  
			"drops_rate", 
			"int_drops_rate", 
			"ba_stats_rate",
			"ba_drops_rate",
			"bd_stats_rate",
                        "bd_drops_rate",
                        "detection",
                        "mitigation_low",
                        "mitigation_high",
                        "detection_ba",
                        "mitigation_ba_low",
                        "mitigation_ba_high",
                        "detection_bd",
                        "mitigation_bd_low",
                        "mitigation_bd_high",
			"tmm_count"
      
		]
        }
	ruby { code => 'event.set("overall_drop_rate", event.get("drops_rate").to_i + event.get("int_drops_rate").to_i + event.get("ba_drops_rate").to_i + event.get("bd_drops_rate").to_i)' }
	ruby { code => 'event.set("total_drop_rate", event.get("drops_rate").to_i + event.get("int_drops_rate").to_i)' }
	ruby { code => 'event.set("detection_all_tmm", event.get("detection").to_i * event.get("tmm_count").to_i)' }
	ruby { code => '
			sum = event.get("mitigation_low").to_i + event.get("mitigation_high").to_i
			avg = sum.to_i / 2
			event.set("mitigation_curr_all_tmm", avg.to_i * event.get("tmm_count").to_i)
		' }
        ruby { code => '
                        sum = event.get("mitigation_ba_low").to_i + event.get("mitigation_ba_high").to_i
                        avg = sum.to_i / 2
                        event.set("mitigation_ba_all_tmm", avg.to_i * event.get("tmm_count").to_i)
                ' }
        ruby { code => '
                        sum = event.get("mitigation_bd_low").to_i + event.get("mitigation_bd_high").to_i
                        avg = sum.to_i / 2
                        event.set("mitigation_bd_all_tmm", avg.to_i * event.get("tmm_count").to_i)
                ' }
    	if "dos-common" in [dos_attack_name] { mutate { gsub => ["dos_attack_name","/Common/dos-common/",""] } }
	if "Device" in [context_name] {
         ruby { code => 'event.set("incoming_packet_rate", event.get("stats_rate").to_i + event.get("ba_drops_rate").to_i + event.get("bd_drops_rate").to_i )' }

        } else {
	 ruby { code => 'event.set("incoming_packet_rate", event.get("drops_rate").to_i + event.get("int_drops_rate").to_i + event.get("ba_drops_rate").to_i + event.get("bd_drops_rate").to_i )' }
	}
        if "TCP half open" in [dos_attack_name] {
		mutate { 
			update => {"incoming_packet_rate" => "0" }
                        update => {"overall_drop_rate" => "0" }
			update => {"total_drop_rate" => "0" }
		 }
		
        }
     }

}


output {
	if "f5ddoskv" in [tags]{
        elasticsearch {
            index => "f5-ddos-i-%{+YYYY.MM.dd}"
            hosts => ["localhost:9200"]
        }
	}
        if "f5ddos_stats" in [tags] {
        elasticsearch {
            index => "f5-stats-ddos-t-%{+YYYY.MM.dd}"
            hosts => ["localhost:9200"]
        }
        }
}
